---
name: Release (Stable)
run-name: Release ${{ inputs.version }}

concurrency: "release-stable"

on:
  workflow_dispatch:
    inputs:
      version:
        description: |
          Version to release. Must be greater than the last version.
        required: true

env:
  VERSION: ${{ inputs.version }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      go-latest-version: ${{ steps.find-go-version.outputs.go-latest-version }}
      go-supported-versions: ${{ steps.find-go-version.outputs.go-supported-versions }}
    steps:
      - name: Checkout code
        uses: nhatthm/gh-actions/checkout@master

      - id: find-go-version
        name: Find Go version
        uses: nhatthm/gh-actions/find-go-version@master

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ darwin, linux, windows ]
        arch: [ amd64, arm64 ]
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      GO_LATEST_VERSION: ${{ needs.setup.outputs.go-latest-version }}
    steps:
      - name: Checkout code
        uses: nhatthm/gh-actions/checkout@master

      - name: Setup
        run: |
          make "$GITHUB_ENV"

      - name: Install Go
        uses: nhatthm/gh-actions/setup-go@master
        with:
          go-version: ${{ env.GO_LATEST_VERSION }}

      - name: Build
        id: build
        run: |
          BUILD_NAME="authenticator-${VERSION}-${{ matrix.os }}-${{ matrix.arch }}"
          BUILD_DIR="out/${BUILD_NAME}"
          BUILD_DIR="${BUILD_DIR}/" VERSION="${VERSION}" GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make build

          echo "BUILD_NAME=${BUILD_NAME}" >> "$GITHUB_OUTPUT"
          echo "BUILD_DIR=${BUILD_DIR}" >> "$GITHUB_OUTPUT"

      - name: Upload Artifact
        uses: nhatthm/gh-actions/upload-artifact@master
        with:
          name: ${{ steps.build.outputs.BUILD_NAME }}
          path: ${{ steps.build.outputs.BUILD_DIR }}

  release-github:
    permissions:
      contents: write
      packages: write
    needs: [build]
    runs-on: ubuntu-latest
    env:
      GO_LATEST_VERSION: ${{ needs.setup.outputs.go-latest-version }}
    steps:
      - name: Checkout code
        uses: nhatthm/gh-actions/checkout@master

      - name: Download artifacts
        uses: nhatthm/gh-actions/download-artifact@master
        with:
          pattern: authenticator-*
          path: ${{ github.workspace }}/out

      - name: Packing
        run: |
          cd out/

          for i in ./*; do
            RELEASE=$(basename "${i}")

            echo "Packing binary for ${RELEASE}..."
            chmod +x "${RELEASE}/authenticator"
            tar -czf "${RELEASE}.tar.gz" "${RELEASE}"
          done

      - name: Generate Install Script
        id: generate-install-script
        uses: ./.github/actions/generate-install-script
        with:
          version: v${{ env.VERSION }}
          revision: ${{ github.sha }}

      - name: Delete release (${{ env.VERSION }})
        uses: nhatthm/gh-actions/github-delete-release@master
        with:
          release: ${{ env.VERSION }}

      - name: Release (${{ env.VERSION }})
        uses: nhatthm/gh-actions/github-release@master
        with:
          name: "${{ env.VERSION }}"
          tag_name: "v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: |
            ./out/*.tar.gz
            ./${{ steps.generate-install-script.outputs.install-script }}
          generate_release_notes: "true"
